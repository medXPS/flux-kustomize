kubectl create secret generic github-secret  --from-literal=username=medXPS  --from-literal=password=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 -n flux-system


kubectl create secret generic flux-system  --namespace=flux-system  --from-literal=GITHUB_TOKEN=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


export GITHUB_TOKEN=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
export GITHUB_USER=medXPS

flux bootstrap github \
 --owner=$GITHUB_USER \
 --token-auth \
 --repository=flux-kustomize \
 --branch=main \
 --path=./k8s/gateway-service/overlays/dev \
 --personal
./k8s/gateway-service/clusters/dev-cluster
 ---------------
 flux bootstrap  for Bitbucket : 

 flux bootstrap bitbucket-server \
  --token-auth \
  --hostname=my-bitbucket-server.com \
  --owner=my-bitbucket-username \
  --repository=my-repository \
  --branch=main \
  --path=clusters/my-cluster \
  --personal

  ---------------------
  overlays and clusters 

Service1
|
├── base
├── overlays
│   ├── dev 
│   ├── staging 
│   └── prod 
└── clusters
    ├── dev-cluster
    ├── staging-cluster  
    └── prod-cluster
    
Service2
|
├── base
├── overlays
│   ├── dev 
│   ├── staging 
│   └── prod 
└── clusters
    ├── dev-cluster
    ├── staging-cluster  
    └── prod-cluster
        


------------------------------------

├── service-a
│   ├── base
│   │   ├── deployment.yaml
│   │   ├── service.yaml
│   │   └── kustomization.yaml
│   ├── overlays
│   │   ├── dev
│   │   │   ├── kustomization.yaml
│   │   │   └── patch.yaml
│   │   ├── staging
│   │   │   ├── kustomization.yaml
│   │   │   └── patch.yaml
│   │   └── prod
│   │       ├── kustomization.yaml
│   │       └── patch.yaml
│   └── clusters
│       ├── dev-cluster
│       │   ├── kustomization.yaml
│       │   └── some-resource.yaml
│       ├── staging-cluster
│       │   ├── kustomization.yaml
│       │   └── some-resource.yaml
│       └── prod-cluster
│           ├── kustomization.yaml
│           └── some-resource.yaml
├── service-b
│   ├── base
│   │   ├── deployment.yaml
│   │   ├── service.yaml
│   │   └── kustomization.yaml
│   ├── overlays
│   │   ├── dev
│   │   │   ├── kustomization.yaml
│   │   │   └── patch.yaml
│   │   ├── staging
│   │   │   ├── kustomization.yaml
│   │   │   └── patch.yaml
│   │   └── prod
│   │       ├── kustomization.yaml
│   │       └── patch.yaml
│   └── clusters
│       ├── dev-cluster
│       │   ├── kustomization.yaml
│       │   └── some-resource.yaml
│       ├── staging-cluster
│       │   ├── kustomization.yaml
│       │   └── some-resource.yaml
│       └── prod-cluster
│           ├── kustomization.yaml
│           └── some-resource.yaml
└── service-c
    ├── base
    │   ├── deployment.yaml
    │   ├── service.yaml
    │   └── kustomization.yaml
    ├── overlays
    │   ├── dev
    │   │   ├── kustomization.yaml
    │   │   └── patch.yaml
    │   ├── staging
    │   │   ├── kustomization.yaml
    │   │   └── patch.yaml
    │   └── prod
    │       ├── kustomization.yaml
    │       └── patch.yaml
    └── clusters
        ├── dev-cluster
        │   ├── kustomization.yaml
        │   └── some-resource.yaml
        ├── staging-cluster
        │   ├── kustomization.yaml
        │   └── some-resource.yaml
        └── prod-cluster
            ├── kustomization.yaml
            └── some-resource.yaml



gitops create dashboard ww-gitops  --password=$PASSWORD  --export > ./gitops/weave-gitops-dashboard.yaml

kubectl port-forward --address 0.0.0.0 service/gateway-service -n adria-poc 32089:9080
kubectl port-forward --address 0.0.0.0 svc/ww-gitops-weave-gits -n flux-system 31461:9001
9001:31461\TCP




az ad sp create-for-rbac --name adriak8s --role reader --scopes /subscriptions/54dd0bf8-10dd-4596-bc77-a1061efa9d48/resourceGroups/adria

----------------------


flux create source helm ww-gitops 
  --url=https://helm.gitops.weave.works 
  --export > ./clusters/workshop/weave-gitops-source.yaml


  -------------------------------------------
  kubectl describe gitrepository dev-cluster-gateway-service-repo -n flux-system

az keyvault create --resource-group adria --name adria-vault --location westeurope --enabled-for-deployment
az keyvault certificate create  --vault-name adria  --name nexus-cert  --policy "$(az keyvault certificate get-default-policy)"
az keyvault certificate create --vault-name adria -n cert1   -p "$(az keyvault certificate get-default-policy)"



secret=$(az keyvault secret list-versions 
          --vault-name adria
          --name cert1 
          --query "[?attributes.enabled].id" --output tsv)
vm_secret=$(az vm secret format --secrets "$secret" -g adria --keyvault adria)

mamma@DevOps MINGW64 ~/Desktop/azure-adria $ echo $secret https://adria.vault.azure.net/secrets/cert1/0ce93b5399f14991b18477c669c45b45 mamma@DevOps MINGW64 ~/Desktop/azure-adria $



$ vm_secret=$(az vm secret format --secrets "$secret" -g adria --keyvault adria)

mamma@DevOps MINGW64 ~/Desktop/azure-adria
$ echo $vm_secret
 ]certificateUrl": "https://adria.vault.azure.net/secrets/cert1/0ce93b5399f14991b18477c669c45b45"oft.KeyVault/vaults/adria"

mamma@DevOps MINGW64 ~/Desktop/azure-adria
$



az vm extension set 
    --resource-group adria 
    --vm-name adria-vm 
    --name CustomScript 
    --publisher Microsoft.Azure.Extensions 
    --settings '{"fileUris":["file://./cloud-init-web-server.txt"]}' 
    --protected-settings '{"commandToExecute": "bash cloud-init-web-server.txt"}'



az vm extension set 
   --resource-group adria 
   --vm-name adria-vm 
   --name CustomScript 
   --publisher Microsoft.Azure.Extensions 
   --settings '{"fileUris":["file://./cloud-init-web-server.txt"]}' 
   --protected-settings '{"commandToExecute": "bash cloud-init-web-server.txt"}'




   az keyvault certificate create --vault-name adria -n cert1 -p '{ \"issuerParameters\": { \"certificateTransparency\": null, \"name\": \"Self\" }, \"keyProperties\": { \"curve\": null, \"exportable\": true, \"keySize\": 2048, \"keyType\": \"RSA\", \"reuseKey\": true }, \"lifetimeActions\": [ { \"action\": { \"actionType\": \"AutoRenew\" }, \"trigger\": { \"daysBeforeExpiry\": 90 } } ], \"secretProperties\": { \"contentType\": \"application/x-pkcs12\" }, \"x509CertificateProperties\": { \"keyUsage\": [ \"cRLSign\", \"dataEncipherment\", \"digitalSignature\", \"keyEncipherment\", \"keyAgreement\", \"keyCertSign\" ], \"subject\": \"CN=CLIGetDefaultPolicy\", \"validityInMonths\": 12 } }'
(Forbidden) Caller is not authorized to perform action on resource.

az vm extension set 
   --resource-group adria 
   --vm-name adria-vm 
   --name CustomScript 
   --publisher Microsoft.Azure.Extensions 
   --settings "{\"fileUris\":[\"https://raw.githubusercontent.com/medXPS/flux-kustomize/main/Terraform/cloud-init-web-server.txt\"]}" 
   --protected-settings "{\"commandToExecute\": \"bash cloud-init-web-server.txt\"}"



az vm extension set 
    --resource-group adria 
    --vm-name adria-vm 
    --name CustomScript 
    --publisher Microsoft.Azure.Extensions 
    --settings '{"fileUris":["https://raw.githubusercontent.com/medXPS/flux-kustomize/main/Terraform/cloud-init-web-server.txt"]}' 
    --protected-settings '{"commandToExecute": "cloud-init-web-server.txt"}'


az network nsg rule create -g adria --nsg-name adria-nsg --name AllowPort8082 --priority 100 
    --direction Inbound --protocol Tcp --source-address-prefix "*" --source-port-range "*" 
    --destination-address-prefix "*" --destination-port-range 8082 --access Allow --description "Allow inbound traffic on port 8082"
