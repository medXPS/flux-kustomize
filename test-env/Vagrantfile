# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/bionic64"
  
    config.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 6
    end
  
    config.vm.network "forwarded_port", guest: 8080, host: 8080
    config.vm.network "forwarded_port", guest: 9091, host: 9091 
    config.vm.network "forwarded_port", guest: 50000, host: 50000
  
    config.vm.provision "shell", inline: <<-SHELL
      # Update and install required packages
      sudo apt-get update
      sudo apt-get upgrade -y
  
      # Install Docker
      sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      sudo apt-get update
      sudo apt-get install -y docker-ce
  
      # Add vagrant user to the docker group
      sudo usermod -aG docker vagrant
  
      # Install openjdk 17 
      sudo apt update
      sudo apt install openjdk-17-jdk
      sudo apt install openjdk-17-jre
      #upgrade apt
      sudo apt-get upgrade
      #fix heplers issue 
      wget http://ftp.kr.debian.org/debian/pool/main/i/init-system-helpers/init-system-helpers_1.60_all.deb
      sudo apt install ./init-system-helpers_1.60_all.deb
      #install Jenkins 
      sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
      https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
      echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
      https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
      /etc/apt/sources.list.d/jenkins.list > /dev/null
      sudo apt-get update
      sudo apt-get install jenkins
  
      # Start Jenkins and enable it to start at boot
      sudo systemctl start jenkins
      sudo systemctl enable jenkins
  
      # Allow Jenkins to use Docker
      sudo usermod -aG docker jenkins
      sudo systemctl restart jenkins
  
      # Install Docker Compose
      sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose
      # Install Flux CLI
    curl -s https://fluxcd.io/install.sh | sudo bash

    # Install Kustomize
    curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest \
    | grep browser_download_url \
    | grep linux_amd64 \
    | cut -d '"' -f 4 \
    | xargs curl -O -L
    sudo mkdir -p /usr/local/bin
    sudo mv kustomize_*_linux_amd64 /usr/local/bin/kustomize
    sudo chmod +x /usr/local/bin/kustomize

    # Install Helm
    curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
    sudo apt-get install apt-transport-https --yes
    echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    sudo apt-get update
    sudo apt-get install helm -y
    #install minikube 
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
    #install Kubectl 
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    sudo chmod +x kubectl
    sudo mv kubectl /usr/local/bin

      # Reboot to apply all changes
      sudo reboot
    SHELL
  end
  